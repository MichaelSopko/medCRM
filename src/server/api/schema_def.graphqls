# Database counter
type Count {
  # Current amount
  amount: Int!
}

type User {
	id: Int!
	login: String
	password: String
	type: Role!
}

enum Role {
	SYSTEM_ADMIN
	CLINIC_ADMIN
	THERAPIST
	PATIENT
}

type Query {
  count: Count
	clinics: [Clinic]
}

type Clinic {
	id: Int!,
	name: String!
	address: String
}

type MutationStatus {
	status: String
}

type Mutation {
  # Increase counter value, returns current counter amount
  addCount(
    # Amount to add to counter
    amount: Int!
  ): Count

  addClinic(
    name: String!
		address: String
  ): MutationStatus

  editClinic(
		id: Int!
    name: String!
		address: String
  ): MutationStatus

	deleteClinic(
		id: Int!
	): MutationStatus
}

type Subscription {
  # Subscription fired when anyone increases counter
  countUpdated(ids: String): Count
}

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
