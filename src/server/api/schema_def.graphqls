scalar Date

interface User {
	id: ID!
}

enum Role {
	SYSTEM_ADMIN
	CLINIC_ADMIN
	THERAPIST
	PATIENT
}

enum GENDER {
	MALE
	FEMALE
}

type SystemAdministrator implements User {
	id: ID!
	role: Role!
	login: String
}

type ClinicAdministrator implements User {
	id: ID!
	clinic: Clinic
	first_name: String
	last_name: String
	email: String!
}

type Therapist implements User {
	id: ID!
	id_number: String
	first_name: String
	last_name: String
	clinic: Clinic
	license_number: Int
	phone: String
	email: String
	birth_date: Date
	disabled: Boolean
	role: Role
	title: String
}

input TherapistInput {
	id_number: String
	first_name: String
	last_name: String
	license_number: Int
	phone: String
	email: String
	birth_date: Date
	disabled: Boolean
	role: Role
	title: String
	password: String
}

type PatientFile {
	id: ID!
	patient_id: ID!
	name: String!
	url: String!
	size: Int!
	type: String!
}

input PatientFileInput {
	patient_id: ID!
	name: String!
	url: String!
	size: Int!
	type: String!
}

interface PatientObject {
	id: ID!
	patient: Patient
	patient_age: String # duration in milliseconds
	date: Date
	fillers: [Therapist]
}

type TreatmentSummaryFields {
	treatments_length: String
	treatment_targets: String
	parents_involment: String
	treatments_progress: String
	recommendations: String
}

type TreatmentSummary implements PatientObject {
	id: ID!
	patient: Patient
	patient_age: String
	date: Date
	fillers: [Therapist]
	fields: TreatmentSummaryFields
}

input TreatmentSummaryFieldsInput {
	treatments_length: String
	treatment_targets: String
	parents_involment: String
	treatments_progress: String
	recommendations: String
}

input TreatmentSummaryInput {
	patient_id: ID!
	patient_age: String!
	date: Date!
	fillers_ids: [String!]!
	fields: TreatmentSummaryFieldsInput!
}

type DiagnoseFields {
	pregnancy_and_birth: String
	psychomotor_progression: String
	language_and_speech_progression: String
	eating_function: String
	family_background: String
	health_background: String
	past_and_present_treatments: String
	environmental_context: String
	parents_report: String
	kindergarten_teacher_report: String
	diagnose_tools: String
	behaviour_and_general_impression: String
	communications_skills: String
	gaming_skills: String
	language_grasp: String
	language_expression: String
	speech_intelligibility: String
	speech_fluency: String
	summary: String
	recommendations: String
}

type Diagnose implements PatientObject {
	id: ID!
	patient: Patient
	patient_age: String
	date: Date
	fillers: [Therapist]
	fields: DiagnoseFields
	hearing_test_remark: String
	hearing_test_date: Date
}

#killmepls
input DiagnoseFieldsInput {
	pregnancy_and_birth: String
	psychomotor_progression: String
	language_and_speech_progression: String
	eating_function: String
	family_background: String
	health_background: String
	past_and_present_treatments: String
	environmental_context: String
	parents_report: String
	kindergarten_teacher_report: String
	diagnose_tools: String
	behaviour_and_general_impression: String
	communications_skills: String
	gaming_skills: String
	language_grasp: String
	language_expression: String
	speech_intelligibility: String
	speech_fluency: String
	summary: String
	recommendations: String
}

input DiagnoseInput {
	patient_id: ID!
	patient_age: String!
	date: Date!
	fillers_ids: [String!]!
	fields: DiagnoseFieldsInput!
	hearing_test_remark: String
	hearing_test_date: Date
}

type Patient implements User {
	id: ID!
	id_number: String!
	first_name: String!
	last_name: String!
	birth_date: Date!
	phone: String!
	remarks: String
	profile_email: String
	clinic: Clinic
	clinic_id: ID,
	related_persons: [PatientRelatedPerson]
	health_maintenance: PatientHealthMaintenance
	files: [PatientFile]
	treatment_series: [TreatmentSeries]
	diagnoses: [Diagnose]
	treatment_summary: [TreatmentSummary]
	archived_date: Date
	archived: Boolean
	gender: GENDER
}

input PatientInput {
	id_number: String!
	first_name: String!
	last_name: String!
	birth_date: Date!
	phone: String!
	profile_email: String
	related_persons: [PatientRelatedPersonInput]
	health_maintenance: PatientHealthMaintenance
	remarks: String
	diagnoses: [String!]
	treatment_summary: [String!]
	gender: GENDER
}

enum PatientRelatedPersonType {
	MOTHER
	FATHER
	OTHER
}

enum PatientHealthMaintenance {
	CLATIT
	MACCABI
	MEUHEDET
	LEUMIT
	PRIVATE
}

type PatientRelatedPerson {
	type: PatientRelatedPersonType
	description: String
	phone: String
	email: String
	receive_updates: Boolean
	name: String
}

input PatientRelatedPersonInput {
	type: PatientRelatedPersonType
	description: String
	phone: String
	email: String
	receive_updates: Boolean
	name: String
}

type SchoolObservation {
	id: ID!
	patient: Patient!
	observationReason: String
	educationEntity: String
	date: Date
	context: String
	generalBackground: String
	familyBackground: String
	medicalBackground: String
	previousDiagnoses: String
	educationalFramework: String
	observationFindings: String
	observationSummary: String
	therapists: [Therapist]
}

input SchoolObservationInput {
	observationReason: String
	educationEntity: String
	date: Date
	context: String
	generalBackground: String
	familyBackground: String
	medicalBackground: String
	previousDiagnoses: String
	educationalFramework: String
	observationFindings: String
	observationSummary: String
	therapist_ids: [ID]!
}

type StaffMeeting {
	id: ID!
	participants: [Therapist]
	date: Date
	protocol: String
	nextRecommendation: String
	meetingPurpose: String
}

input StaffMeetingInput {
	participant_ids: [ID]!
	date: Date
	protocol: String
	nextRecommendation: String
	meetingPurpose: String
}

type OutsideSourceConsult {
	id: ID!
	consultantRole: String
	date: Date
	meetingSummary: String
}

input OutsideSourceConsultInput {
	consultantRole: String
	date: Date
	meetingSummary: String
}

union TreatmentSeriesObject = SchoolObservation | Treatment | StaffMeeting | OutsideSourceConsult
input TreatmentSeriesObjectInput {
	TreatmentInput: TreatmentInput,
	SchoolObservationInput: SchoolObservationInput,
	StaffMeetingInput: StaffMeetingInput,
	OutsideSourceConsultInput: OutsideSourceConsultInput
}

type TreatmentSeries {
	id: ID!
	name: String
	treatments_number: Int!
	treatments: [Treatment]
	objects: [TreatmentSeriesObject]
	patient: Patient
	patient_id: ID!
}

type Treatment {
	id: ID!
	target: String
	method: String
	process: String
	parents_guidance: String
	next_treatment_remark: String
	therapists: [Therapist]
	start_date: Date
	end_date: Date
}

input TreatmentInput {
	target: String
	method: String
	process: String
	parents_guidance: String
	next_treatment_remark: String
	therapist_ids: [ID]
	start_date: Date
	end_date: Date
	repeat_weeks: Int
}

type CurrentUser implements User {
	id: ID!
	login: String,
	role: Role!,
	first_name: String,
	last_name: String,
	email: String,
	clinic: Clinic
	title: String
	license_number: String
	phone: String
}

type Clinic {
	id: ID!,
	name: String!
	address: String!
	email: String
	fax: String
	phone: String
	administrators: [ClinicAdministrator]
	patients: [Patient]
	therapists: [Therapist]
	treatment_duration: Int
	patients_limit: Int!
	archive_time: Int
	disabled: Boolean
	deleted: Boolean
}

type MutationStatus {
	status: String
}

input ClinicInput {
	name: String!
	address: String!
	phone: String
	email: String
	fax: String
	treatment_duration: Int
	patients_limit: Int!
	archive_time: Int
	disabled: Boolean
}

type Query {
	clinics: [Clinic]
	administrators: [ClinicAdministrator]
	therapists(clinic_id: ID): [Therapist]
	patients(clinic_id: ID!, archived: Boolean): [Patient]
	patient(id: ID!): Patient
	treatmentSeries(patient_id: ID, clinic_id: ID, therapist_id: ID): [TreatmentSeries]
	treatmentsList(patient_id: ID, clinic_id: ID, therapist_id: ID): [Treatment]
	currentUser: CurrentUser
}

type Mutation {
	signUp(
		first_name: String
		last_name: String
		email: String!
		password: String!
	): MutationStatus

	addClinic(clinic: ClinicInput): Clinic!

	editClinic(
		id: Int!
		clinic: ClinicInput
	): Clinic!

	deleteClinic(
		id: Int!
	): Clinic!

	addAdministrator(
		email: String!
		password: String!
		clinic_id: ID!
	): MutationStatus

	editAdministrator(
	id: Int!
	password: String!
): MutationStatus

	deleteAdministrator(
	id: Int!
): MutationStatus


	createTherapist(
	clinic_id: ID!,
	therapist: TherapistInput!
): Therapist!

	updateTherapist(
	id: ID!,
	therapist: TherapistInput!
): Therapist!

	deleteTherapist(
	id: Int!
): Boolean!


	addPatient(
	clinic_id: ID!
	patient: PatientInput
): Patient!

	editPatient(
	id: ID!
	patient: PatientInput
): Patient!

	deletePatient(
	id: ID!
): Patient!

	archivePatient(id: ID!): Patient!
	unarchivePatient(id: ID!): Patient!


	addTreatmentSeries(
	name: String
	treatments_number: Int!
	patient_id: ID!
	clinic_id: ID!
): MutationStatus

	editTreatmentSeries(
	id: Int!
	name: String
	treatments_number: Int!
): MutationStatus

	deleteTreatmentSeries(
	id: Int!
): MutationStatus


	addTreatment(
	series_id: Int!,
	object: TreatmentSeriesObjectInput!
): MutationStatus

	editTreatment(
	id: Int!
	object: TreatmentSeriesObjectInput!
): MutationStatus

	deleteTreatment(
	id: Int!
): MutationStatus

	addPatientFile(file: PatientFileInput!): Patient!
	deletePatientFile(id: ID!): Patient!

	addTreatmentSummary(input: TreatmentSummaryInput!): Patient!
	addDiagnose(input: DiagnoseInput!): Patient!
	editTreatmentSummary(id: ID!, input: TreatmentSummaryInput!): Patient!
	editDiagnose(id: ID!, input: DiagnoseInput!): Patient!

	createTreatmentSeries(
	name: String
	treatments_number: Int!
	patient_id: ID!
	clinic_id: ID!
): MutationStatus

	updateTreatmentSeries(
	id: ID!
	name: String
	treatments_number: Int!
): MutationStatus


	createTreatmentSeriesObject(series_id: ID!, object: TreatmentSeriesObjectInput!): TreatmentSeriesObject!
	updateTreatmentSeriesObject(id: ID!, object: TreatmentSeriesObjectInput!): TreatmentSeriesObject!
	deleteTreatmentSeriesObject(id: ID!, typename: String!): Boolean

}


type Subscription {
	patientCreated(clinic_id: ID!): Patient!
	patientUpdated(id: ID!): Patient!
	patientDeleted(clinic_id: ID!): Patient!
	treatmentSeriesCreated(patient_id: Int!): TreatmentSeries!
	treatmentSeriesUpdated(patient_id: Int!): TreatmentSeries!
	treatmentSeriesDeleted(patient_id: Int!): TreatmentSeries!
}

schema {
	query: Query
	mutation: Mutation
	subscription: Subscription
}
