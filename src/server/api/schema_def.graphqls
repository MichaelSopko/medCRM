# Database counter
type Count {
  # Current amount
  amount: Int!
}

type User {
	id: Int!
	login: String,
	password: String,
	type: Role!
}

enum Role {
	SYSTEM_ADMIN,
	CLINIC_ADMIN,
	THERAPIST,
	PATIENT
}

type Query {
  # Counter
  count: Count
}

type Clinic {
	id: Int!,
	name: String!,
	users: User
}

type Mutation {
  # Increase counter value, returns current counter amount
  addCount(
    # Amount to add to counter
    amount: Int!
  ): Count
}

type Subscription {
  # Subscription fired when anyone increases counter
  countUpdated(ids: String): Count
}

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
