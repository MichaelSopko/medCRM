scalar Date

interface User {
	id: Int!
}

enum Role {
	SYSTEM_ADMIN
	CLINIC_ADMIN
	THERAPIST
	PATIENT
}

type SystemAdministrator implements User {
	id: Int!
	role: Role!
	login: String
}

type ClinicAdministrator implements User {
	id: Int!
	clinic: Clinic
	first_name: String
	last_name: String
	email: String!
}

type Therapist implements User {
	id: Int!
	id_number: String
	first_name: String
	last_name: String
	clinic: Clinic
	license_number: Int
	phone: String
	email: String
	birth_date: Date
	disabled: Boolean
}

type PatientFile {
	name: String!
	url: String!
	size: Int!
	type: String!
}

input PatientFileInput {
	name: String!
	url: String!
	size: Int!
	type: String!
}

type Patient implements User {
	id: Int!
	id_number: String!
	first_name: String!
	last_name: String!
	birth_date: Date!
	phone: String!
	profile_email: String
	clinic: Clinic
	clinic_id: Int,
	related_persons: [PatientRelatedPerson]
	health_maintenance: PatientHealthMaintenance
	files: [PatientFile]
	treatment_series: [TreatmentSeries]
	diagnoses: [String!]
	treatment_summary: [String!]
	archived_date: Date
	archived: Boolean
}

input PatientInput {
	id_number: String!
	first_name: String!
	last_name: String!
	birth_date: Date!
	phone: String!
	profile_email: String
	related_persons: [PatientRelatedPersonInput]
	health_maintenance: PatientHealthMaintenance
	files: [PatientFileInput]
	diagnoses: [String!]
	treatment_summary: [String!]
}

enum PatientRelatedPersonType {
	MOTHER
	FATHER
	OTHER
}

enum PatientHealthMaintenance {
	CLATIT
	MACCABI
	MEUHEDET
	LEUMIT
	PRIVATE
}

type PatientRelatedPerson {
	type: PatientRelatedPersonType
	description: String
	phone: String!
	email: String
	receive_updates: Boolean
}

input PatientRelatedPersonInput {
	type: PatientRelatedPersonType!
	description: String
	phone: String!
	email: String
	receive_updates: Boolean
}

type TreatmentSeries {
	id: ID!
	name: String
	treatments_number: Int!
	treatments: [Treatment]
	patient: Patient
	patient_id: ID!
}

type Treatment {
	id: ID!
	target: String
	method: String
	process: String
	parents_guidance: String
	next_treatment_remark: String
	therapists: [Therapist]
	start_date: Date
	end_date: Date
}

type CurrentUser implements User {
	id: Int!
	login: String,
	role: Role!,
	first_name: String,
	last_name: String,
	email: String,
	clinic: Clinic
}

type Clinic {
	id: Int!,
	name: String!
	address: String!
	email: String
	fax: String
	phone: String
	administrators: [ClinicAdministrator]
	patients: [Patient]
	therapists: [Therapist]
	treatment_duration: Int
	patients_limit: Int!
	archive_time: Int
	disabled: Boolean
	deleted: Boolean
}

type MutationStatus {
	status: String
}

input TreatmentInput {
	target: String
	method: String
	process: String
	parents_guidance: String
	next_treatment_remark: String
	patient_ids: [Int]
	therapist_ids: [Int]
	start_date: Date
	end_date: Date
}

input ClinicInput {
	name: String!
	address: String!
	phone: String
	email: String
	fax: String
	treatment_duration: Int
	patients_limit: Int!
	archive_time: Int
	disabled: Boolean
}

type Query {
	clinics: [Clinic]
	administrators: [ClinicAdministrator]
	therapists(clinic_id: Int): [Therapist]
	patients(clinic_id: Int!, archived: Boolean): [Patient]
	patient(id: Int!): Patient
	treatmentSeries(patient_id: ID, clinic_id: Int, therapist_id: ID): [TreatmentSeries]
	currentUser: CurrentUser
}

type Mutation {
	addClinic(clinic: ClinicInput): Clinic!

	editClinic(
		id: Int!
		clinic: ClinicInput
	): Clinic!

	deleteClinic(
		id: Int!
	): Clinic!

	addAdministrator(
		email: String!
		password: String!
		clinic_id: Int!
	): MutationStatus

	editAdministrator(
	id: Int!
	password: String!
): MutationStatus

	deleteAdministrator(
	id: Int!
): MutationStatus


	addTherapist(
	password: String!
	id_number: String!
	first_name: String!
	last_name: String!
	clinic_id: Int!
	license_number: Int!
	phone: String!
	email: String!
	birth_date: Date!
): MutationStatus

	editTherapist(
	id: Int!
	password: String
	id_number: String!
	first_name: String!
	last_name: String!
	license_number: Int!
	phone: String!
	email: String!
	birth_date: Date!
	disabled: Boolean
): MutationStatus

	deleteTherapist(
	id: Int!
): MutationStatus


	addPatient(
	clinic_id: Int!
	patient: PatientInput
): Patient!

	editPatient(
	id: Int!
	patient: PatientInput
): Patient!

	deletePatient(
	id: Int!
): Patient!

	archivePatient(id: ID!): Patient!
	unarchivePatient(id: ID!): Patient!


	addTreatmentSeries(
	name: String
	treatments_number: Int!
	patient_id: Int!
	clinic_id: Int!
): MutationStatus

	editTreatmentSeries(
	id: Int!
	name: String
	treatments_number: Int!
): MutationStatus

	deleteTreatmentSeries(
	id: Int!
): MutationStatus


	addTreatment(
	series_id: Int!
	treatment: TreatmentInput
): MutationStatus

	editTreatment(
	id: Int!
	treatment: TreatmentInput
): MutationStatus

	deleteTreatment(
	id: Int!
): MutationStatus

}


type Subscription {
	patientCreated(clinic_id: Int!): Patient!
	patientUpdated(id: Int!): Patient!
	patientDeleted(clinic_id: Int!): Patient!
	treatmentSeriesCreated(patient_id: Int!): TreatmentSeries!
	treatmentSeriesUpdated(patient_id: Int!): TreatmentSeries!
	treatmentSeriesDeleted(patient_id: Int!): TreatmentSeries!
}

schema {
	query: Query
	mutation: Mutation
	subscription: Subscription
}
