type SchoolObservation {
	id: ID!
	patient: Patient!
	observationReason: String
	educationEntity: String
	date: Date
	context: String
	generalBackground: String
	familyBackground: String
	medicalBackground: String
	previousDiagnoses: String
	educationalFramework: String
	observationFindings: String
	observationSummary: String
	therapist: Therapist!
}

input SchoolObservationInput {
	patient_id: ID!
	observationReason: String
	educationEntity: String
	date: Date
	context: String
	generalBackground: String
	familyBackground: String
	medicalBackground: String
	previousDiagnoses: String
	educationalFramework: String
	observationFindings: String
	observationSummary: String
	therapist_id: ID!
}

type StaffMeeting {
	id: ID!
	participants: [Therapist]
	date: Date
	protocol: String
	nextRecommendation: String
}

input StaffMeetingInput {
	participants: [ID]!
	date: Date
	protocol: String
	nextRecommendation: String
}

type OutsideSourceConsult {
	id: ID!
	consultantRole: String
	date: Date
	meetingSummary: String
}

input OutsideSourceConsultInput {
	consultantRole: String
	date: Date
	meetingSummary: String
}

type Treatment {
	id: ID!
	target: String
	method: String
	process: String
	parents_guidance: String
	next_treatment_remark: String
	therapists: [Therapist]
	start_date: Date
	end_date: Date
}

input TreatmentInput {
	target: String
	method: String
	process: String
	parents_guidance: String
	next_treatment_remark: String
	therapist_ids: [ID]
	start_date: Date
	end_date: Date
	repeat_weeks: Int
}

union TreatmentSeriesObject = SchoolObservation | Treatment | StaffMeeting
# union TreatmentSeriesObjectInput = SchoolObservationInput | TreatmentInput | StaffMeetingInput

type TreatmentSeries {
	id: ID!
	name: String
	treatments_number: Int!
	objects: [TreatmentSeriesObject]
	patient: Patient
	patient_id: ID!
}

extend type Query {
	treatmentSeries(patient_id: ID, clinic_id: Int, therapist_id: ID): [TreatmentSeries]
}

extend type Mutation {
	createTreatmentSeries(
		name: String
		treatments_number: Int!
		patient_id: Int!
		clinic_id: Int!
	): MutationStatus

	updateTreatmentSeries(
		id: Int!
		name: String
		treatments_number: Int!
	): MutationStatus

	deleteTreatmentSeries(
		id: Int!
	): MutationStatus


	#createTreatmentSeriesObject(series_id: ID!, object: TreatmentSeriesObjectInput!): TreatmentSeriesObject!
	#updateTreatmentSeriesObject(id: ID!, object: TreatmentSeriesObjectInput!): TreatmentSeriesObject!
	deleteTreatmentSeriesObject(id: ID!): Boolean

}

extend type Subscription {
	treatmentObjectCreated(patient_id: ID!): TreatmentSeriesObject!
	treatmentObjectUpdated(patient_id: ID!): TreatmentSeriesObject!
	treatmentObjectDeleted(patient_id: ID!): TreatmentSeriesObject!
}
